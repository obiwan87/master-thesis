experiment_id = 2;

name = 'Global and Local Lexical Substitution';
description = 'Examine how global and local lexical substitution perform alone and in combination. ';

S = { {'LocalLexicalKnnSubstitution', 'GlobalLexicalKnnSubstitution'}, {'vocBefore', 'info.vocSizeBefore', 'vocAfter', 'info.vocSizeAfter'} };
scheme = ReportScheme(S{:});
for i=1:numel(Ws)  
    W = Ws{i};
    p = sequence(  ...
        select(@(s) mini(cellfun(@(y) y.loss, s)), ... 
               sequence(fork(grid('ExcludeWords', 'MinCount', num2cell(1:3), 'MaxCount', {Inf})), ...
                        TfIdf(), ...
                        SVMClassifier('KFold', 10) )), ...
        fork(sequence(nop(), nop()), ...
             sequence(LocalLexicalKnnSubstitution('K', 10, 'MaxIter', 10, 'DictDeltaThresh', 10), nop()), ...
             sequence( ...
                       fork(grid('GlobalLexicalKnnSubstitution', 'K', num2cell([150, 100, 50, 30, 20]), 'sigma', {@(x,y,z) (x+y), @(x,y,z) (x+y)./exp(1.3*z)})), ...
                       fork(nop(),LocalLexicalKnnSubstitution('K', 10, 'MaxIter', 10, 'DictDeltaThresh', 10)))), ...
        TfIdf(), ...
        SVMClassifier('KFold', 10));
    
    dataset = business_signals{i};
    r = ExperimentReport(experiment_id, dataset, name, 'Lexical Substitution', scheme);
    P = pipeline(p);
    P.execute(W, r);
    
    store.add(r);
end